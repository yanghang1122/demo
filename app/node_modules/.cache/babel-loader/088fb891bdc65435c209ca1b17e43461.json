{"remainingRequest":"C:\\Users\\a\\Desktop\\demo\\app\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\a\\Desktop\\demo\\app\\src\\store\\home\\index.js","dependencies":[{"path":"C:\\Users\\a\\Desktop\\demo\\app\\src\\store\\home\\index.js","mtime":1650377104019},{"path":"C:\\Users\\a\\Desktop\\demo\\app\\babel.config.js","mtime":1650377103852},{"path":"C:\\Users\\a\\Desktop\\demo\\app\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1647355493193},{"path":"C:\\Users\\a\\Desktop\\demo\\app\\node_modules\\babel-loader\\lib\\index.js","mtime":1647355495837}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIkM6L1VzZXJzL2EvRGVza3RvcC9kZW1vL2FwcC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvci5qcyI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lLmpzIjsKLy/ku45hcGkvaW5kZXguanMg5byV5YWl6L+Z5Lik5Liq5pa55rOVCmltcG9ydCB7IHJlcUNhdGVnb3J5TGlzdCwgcmVxQmFubmVyTGlzdCwgcmVxRmxvb3JMaXN0IH0gZnJvbSAiQC9hcGkvaW5kZXguanMiOwp2YXIgc3RhdGUgPSB7CiAgY2F0ZWdvcnlMaXN0OiBbXSwKICBiYW5uZXJMaXN0OiBbXSwKICBmbG9vckxpc3Q6IFtdCn07IC8vIG11dGF0aW9uc+aYr+S/ruaUueaVsOaNrueahOWUr+S4gOaJi+autQoKdmFyIG11dGF0aW9ucyA9IHsKICBDQVRFR09SWUxJU1Q6IGZ1bmN0aW9uIENBVEVHT1JZTElTVChzdGF0ZSwgY2F0ZWdvcnlMaXN0KSB7CiAgICBzdGF0ZS5jYXRlZ29yeUxpc3QgPSBjYXRlZ29yeUxpc3Q7CiAgfSwKICBHRVRCQU5ORVJMSVNUOiBmdW5jdGlvbiBHRVRCQU5ORVJMSVNUKHN0YXRlLCBiYW5uZXJMaXN0KSB7CiAgICBzdGF0ZS5iYW5uZXJMaXN0ID0gYmFubmVyTGlzdDsKICB9LAogIEdFVEZMT09STElTVDogZnVuY3Rpb24gR0VURkxPT1JMSVNUKHN0YXRlLCBmbG9vckxpc3QpIHsKICAgIHN0YXRlLmZsb29yTGlzdCA9IGZsb29yTGlzdDsKICB9Cn07IC8vIGFjdGlvbnPkuablhpnkuJrliqHpgLvovpEKCnZhciBhY3Rpb25zID0gewogIC8qIDIuIOS7jmFwcC52dWUg6LCD55So5omn6KGM6L+Z5Liq5Ye95pWwIOWPguaVsOino+aehOWHumNvbW1pdCAgDQogIAkgIOiwg+eUqOS7jmFwaS9pbmRleC5qcyDlvJXlhaXnmoRyZXFDYXRlZ29yeUxpc3Tlh73mlbAg5Y675Y+R6K+35rGCIA0KICAgICAgICDnhLblkI7pgJrov4djb21taXTosIPnlKhtdXRhdGlvbnPph4zpnaLnmoRDQVRFR09SWUxJU1Qg5Y675oqK6K+35rGC5p2l55qE5pWw5o2u5a2Y5Yiwc3RzdGXph4zpnaIqLwogIGNhdGVnb3J5TGlzdDogZnVuY3Rpb24gY2F0ZWdvcnlMaXN0KF9yZWYpIHsKICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoKSB7CiAgICAgIHZhciBjb21taXQsIHJlc3VsdDsKICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIGNvbW1pdCA9IF9yZWYuY29tbWl0OwogICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAzOwogICAgICAgICAgICAgIHJldHVybiByZXFDYXRlZ29yeUxpc3QoKTsKCiAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgICByZXN1bHQgPSBfY29udGV4dC5zZW50OwoKICAgICAgICAgICAgICBpZiAocmVzdWx0LmNvZGUgPT0gMjAwKSB7CiAgICAgICAgICAgICAgICBjb21taXQoIkNBVEVHT1JZTElTVCIsIHJlc3VsdC5kYXRhKTsKICAgICAgICAgICAgICB9CgogICAgICAgICAgICBjYXNlIDU6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWUpOwogICAgfSkpKCk7CiAgfSwKICBnZXRCYW5uZXJMaXN0OiBmdW5jdGlvbiBnZXRCYW5uZXJMaXN0KF9yZWYyKSB7CiAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMigpIHsKICAgICAgdmFyIGNvbW1pdCwgcmVzdWx0OwogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTIkKF9jb250ZXh0MikgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0Mi5wcmV2ID0gX2NvbnRleHQyLm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIGNvbW1pdCA9IF9yZWYyLmNvbW1pdDsKICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDM7CiAgICAgICAgICAgICAgcmV0dXJuIHJlcUJhbm5lckxpc3QoKTsKCiAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgICByZXN1bHQgPSBfY29udGV4dDIuc2VudDsKCiAgICAgICAgICAgICAgaWYgKHJlc3VsdC5jb2RlID09IDIwMCkgewogICAgICAgICAgICAgICAgY29tbWl0KCJHRVRCQU5ORVJMSVNUIiwgcmVzdWx0LmRhdGEpOwogICAgICAgICAgICAgIH0KCiAgICAgICAgICAgIGNhc2UgNToKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWUyKTsKICAgIH0pKSgpOwogIH0sCiAgZ2V0Rmxvb3JMaXN0OiBmdW5jdGlvbiBnZXRGbG9vckxpc3QoX3JlZjMpIHsKICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUzKCkgewogICAgICB2YXIgY29tbWl0LCByZXN1bHQ7CiAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMyQoX2NvbnRleHQzKSB7CiAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQzLnByZXYgPSBfY29udGV4dDMubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgY29tbWl0ID0gX3JlZjMuY29tbWl0OwogICAgICAgICAgICAgIF9jb250ZXh0My5uZXh0ID0gMzsKICAgICAgICAgICAgICByZXR1cm4gcmVxRmxvb3JMaXN0KCk7CgogICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgcmVzdWx0ID0gX2NvbnRleHQzLnNlbnQ7CgogICAgICAgICAgICAgIGlmIChyZXN1bHQuY29kZSA9PSAyMDApIHsKICAgICAgICAgICAgICAgIGNvbW1pdCgiR0VURkxPT1JMSVNUIiwgcmVzdWx0LmRhdGEpOwogICAgICAgICAgICAgIH0KCiAgICAgICAgICAgIGNhc2UgNToKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQzLnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWUzKTsKICAgIH0pKSgpOwogIH0KfTsgLy/nlKjkuo7nroDljJbku5PlupPmlbDmja4g55CG6Kej5Li66K6h566X5bGe5oCnCgp2YXIgZ2V0dGVycyA9IHt9OwpleHBvcnQgZGVmYXVsdCB7CiAgc3RhdGU6IHN0YXRlLAogIG11dGF0aW9uczogbXV0YXRpb25zLAogIGFjdGlvbnM6IGFjdGlvbnMsCiAgZ2V0dGVyczogZ2V0dGVycwp9Ow=="},{"version":3,"sources":["C:/Users/a/Desktop/demo/app/src/store/home/index.js"],"names":["reqCategoryList","reqBannerList","reqFloorList","state","categoryList","bannerList","floorList","mutations","CATEGORYLIST","GETBANNERLIST","GETFLOORLIST","actions","commit","result","code","data","getBannerList","getFloorList","getters"],"mappings":";;AAAA;AACA,SAAQA,eAAR,EAAwBC,aAAxB,EAAsCC,YAAtC,QAAyD,gBAAzD;AAGA,IAAMC,KAAK,GAAG;AACbC,EAAAA,YAAY,EAAC,EADA;AAEbC,EAAAA,UAAU,EAAC,EAFE;AAGbC,EAAAA,SAAS,EAAC;AAHG,CAAd,C,CAMA;;AACA,IAAMC,SAAS,GAAG;AACjBC,EAAAA,YADiB,wBACJL,KADI,EACEC,YADF,EACe;AAC/BD,IAAAA,KAAK,CAACC,YAAN,GAAqBA,YAArB;AACA,GAHgB;AAIjBK,EAAAA,aAJiB,yBAIHN,KAJG,EAIGE,UAJH,EAIc;AAC9BF,IAAAA,KAAK,CAACE,UAAN,GAAmBA,UAAnB;AACA,GANgB;AAOjBK,EAAAA,YAPiB,wBAOJP,KAPI,EAOEG,SAPF,EAOY;AAC5BH,IAAAA,KAAK,CAACG,SAAN,GAAkBA,SAAlB;AACA;AATgB,CAAlB,C,CAYA;;AACA,IAAMK,OAAO,GAAG;AACd;AACF;AACA;AACQP,EAAAA,YAJQ,8BAIc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAARQ,cAAAA,MAAQ,QAARA,MAAQ;AAAA;AAAA,qBACRZ,eAAe,EADP;;AAAA;AACvBa,cAAAA,MADuB;;AAE3B,kBAAGA,MAAM,CAACC,IAAP,IAAe,GAAlB,EAAsB;AACrBF,gBAAAA,MAAM,CAAC,cAAD,EAAgBC,MAAM,CAACE,IAAvB,CAAN;AACA;;AAJ0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAK3B,GATa;AAURC,EAAAA,aAVQ,gCAUe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAARJ,cAAAA,MAAQ,SAARA,MAAQ;AAAA;AAAA,qBACTX,aAAa,EADJ;;AAAA;AACxBY,cAAAA,MADwB;;AAE5B,kBAAGA,MAAM,CAACC,IAAP,IAAe,GAAlB,EAAsB;AACrBF,gBAAAA,MAAM,CAAC,eAAD,EAAiBC,MAAM,CAACE,IAAxB,CAAN;AACA;;AAJ2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAK5B,GAfa;AAiBRE,EAAAA,YAjBQ,+BAiBc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAARL,cAAAA,MAAQ,SAARA,MAAQ;AAAA;AAAA,qBACRV,YAAY,EADJ;;AAAA;AACvBW,cAAAA,MADuB;;AAE3B,kBAAGA,MAAM,CAACC,IAAP,IAAe,GAAlB,EAAsB;AACrBF,gBAAAA,MAAM,CAAC,cAAD,EAAgBC,MAAM,CAACE,IAAvB,CAAN;AACA;;AAJ0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAK3B;AAtBa,CAAhB,C,CAyBA;;AACA,IAAMG,OAAO,GAAG,EAAhB;AAIA,eAAgB;AACff,EAAAA,KAAK,EAALA,KADe;AAEfI,EAAAA,SAAS,EAATA,SAFe;AAGfI,EAAAA,OAAO,EAAPA,OAHe;AAIfO,EAAAA,OAAO,EAAPA;AAJe,CAAhB","sourcesContent":["//从api/index.js 引入这两个方法\r\nimport {reqCategoryList,reqBannerList,reqFloorList} from \"@/api/index.js\"\r\n\r\n\r\nconst state = {\r\n\tcategoryList:[],\r\n\tbannerList:[],\r\n\tfloorList:[]\r\n};\r\n\r\n// mutations是修改数据的唯一手段\r\nconst mutations = {\r\n\tCATEGORYLIST(state,categoryList){\r\n\t\tstate.categoryList = categoryList\r\n\t},\r\n\tGETBANNERLIST(state,bannerList){\r\n\t\tstate.bannerList = bannerList\r\n\t},\r\n\tGETFLOORLIST(state,floorList){\r\n\t\tstate.floorList = floorList\r\n\t}\r\n};\r\n\r\n// actions书写业务逻辑\r\nconst actions = {\r\n\t\t/* 2. 从app.vue 调用执行这个函数 参数解构出commit  \r\n\t\t\t  调用从api/index.js 引入的reqCategoryList函数 去发请求 \r\n\t\t      然后通过commit调用mutations里面的CATEGORYLIST 去把请求来的数据存到stste里面*/\r\n\t\tasync categoryList({commit}){\r\n\t\t\tlet result = await reqCategoryList();\r\n\t\t\tif(result.code == 200){\r\n\t\t\t\tcommit(\"CATEGORYLIST\",result.data)\r\n\t\t\t}\r\n\t\t},\r\n\t\tasync getBannerList({commit}){\r\n\t\t\tlet result = await reqBannerList();\r\n\t\t\tif(result.code == 200){\r\n\t\t\t\tcommit(\"GETBANNERLIST\",result.data)\r\n\t\t\t}\r\n\t\t},\r\n\t\t\r\n\t\tasync getFloorList({commit}){\r\n\t\t\tlet result = await reqFloorList();\r\n\t\t\tif(result.code == 200){\r\n\t\t\t\tcommit(\"GETFLOORLIST\",result.data)\r\n\t\t\t}\r\n\t\t}\r\n};\r\n\r\n//用于简化仓库数据 理解为计算属性\r\nconst getters = {\r\n\r\n}\r\n\r\nexport default ({\r\n\tstate,\r\n\tmutations,\r\n\tactions,\r\n\tgetters\r\n\t\r\n})"]}]}