{"remainingRequest":"C:\\Users\\a\\Desktop\\project-SHP\\app\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\a\\Desktop\\project-SHP\\app\\src\\store\\home\\index.js","dependencies":[{"path":"C:\\Users\\a\\Desktop\\project-SHP\\app\\src\\store\\home\\index.js","mtime":1649602116016},{"path":"C:\\Users\\a\\Desktop\\project-SHP\\app\\babel.config.js","mtime":1647355512557},{"path":"C:\\Users\\a\\Desktop\\project-SHP\\app\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1647355493193},{"path":"C:\\Users\\a\\Desktop\\project-SHP\\app\\node_modules\\babel-loader\\lib\\index.js","mtime":1647355495837}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIkM6L1VzZXJzL2EvRGVza3RvcC9wcm9qZWN0LVNIUC9hcHAvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IuanMiOwppbXBvcnQgInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZS5qcyI7Ci8v5LuOYXBpL2luZGV4LmpzIOW8leWFpei/meS4pOS4quaWueazlQppbXBvcnQgeyByZXFDYXRlZ29yeUxpc3QsIHJlcUJhbm5lckxpc3QsIHJlcUZsb29yTGlzdCB9IGZyb20gIkAvYXBpL2luZGV4LmpzIjsKdmFyIHN0YXRlID0gewogIGNhdGVnb3J5TGlzdDogW10sCiAgYmFubmVyTGlzdDogW10sCiAgZmxvb3JMaXN0OiBbXQp9OyAvLyBtdXRhdGlvbnPmmK/kv67mlLnmlbDmja7nmoTllK/kuIDmiYvmrrUKCnZhciBtdXRhdGlvbnMgPSB7CiAgQ0FURUdPUllMSVNUOiBmdW5jdGlvbiBDQVRFR09SWUxJU1Qoc3RhdGUsIGNhdGVnb3J5TGlzdCkgewogICAgc3RhdGUuY2F0ZWdvcnlMaXN0ID0gY2F0ZWdvcnlMaXN0OwogIH0sCiAgR0VUQkFOTkVSTElTVDogZnVuY3Rpb24gR0VUQkFOTkVSTElTVChzdGF0ZSwgYmFubmVyTGlzdCkgewogICAgc3RhdGUuYmFubmVyTGlzdCA9IGJhbm5lckxpc3Q7CiAgfSwKICBHRVRGTE9PUkxJU1Q6IGZ1bmN0aW9uIEdFVEZMT09STElTVChzdGF0ZSwgZmxvb3JMaXN0KSB7CiAgICBzdGF0ZS5mbG9vckxpc3QgPSBmbG9vckxpc3Q7CiAgfQp9OyAvLyBhY3Rpb25z5Lmm5YaZ5Lia5Yqh6YC76L6RCgp2YXIgYWN0aW9ucyA9IHsKICAvKiAyLiDku45hcHAudnVlIOiwg+eUqOaJp+ihjOi/meS4quWHveaVsCDlj4LmlbDop6PmnoTlh7pjb21taXQgIA0KICAJICDosIPnlKjku45hcGkvaW5kZXguanMg5byV5YWl55qEcmVxQ2F0ZWdvcnlMaXN05Ye95pWwIOWOu+WPkeivt+axgiANCiAgICAgICAg54S25ZCO6YCa6L+HY29tbWl06LCD55SobXV0YXRpb25z6YeM6Z2i55qEQ0FURUdPUllMSVNUIOWOu+aKiuivt+axguadpeeahOaVsOaNruWtmOWIsHN0c3Rl6YeM6Z2iKi8KICBjYXRlZ29yeUxpc3Q6IGZ1bmN0aW9uIGNhdGVnb3J5TGlzdChfcmVmKSB7CiAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICB2YXIgY29tbWl0LCByZXN1bHQ7CiAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICBjb21taXQgPSBfcmVmLmNvbW1pdDsKICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMzsKICAgICAgICAgICAgICByZXR1cm4gcmVxQ2F0ZWdvcnlMaXN0KCk7CgogICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgcmVzdWx0ID0gX2NvbnRleHQuc2VudDsKCiAgICAgICAgICAgICAgaWYgKHJlc3VsdC5jb2RlID09IDIwMCkgewogICAgICAgICAgICAgICAgY29tbWl0KCJDQVRFR09SWUxJU1QiLCByZXN1bHQuZGF0YSk7CiAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgY2FzZSA1OgogICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlKTsKICAgIH0pKSgpOwogIH0sCiAgZ2V0QmFubmVyTGlzdDogZnVuY3Rpb24gZ2V0QmFubmVyTGlzdChfcmVmMikgewogICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTIoKSB7CiAgICAgIHZhciBjb21taXQsIHJlc3VsdDsKICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUyJChfY29udGV4dDIpIHsKICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgc3dpdGNoIChfY29udGV4dDIucHJldiA9IF9jb250ZXh0Mi5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICBjb21taXQgPSBfcmVmMi5jb21taXQ7CiAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSAzOwogICAgICAgICAgICAgIHJldHVybiByZXFCYW5uZXJMaXN0KCk7CgogICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgcmVzdWx0ID0gX2NvbnRleHQyLnNlbnQ7CgogICAgICAgICAgICAgIGlmIChyZXN1bHQuY29kZSA9PSAyMDApIHsKICAgICAgICAgICAgICAgIGNvbW1pdCgiR0VUQkFOTkVSTElTVCIsIHJlc3VsdC5kYXRhKTsKICAgICAgICAgICAgICB9CgogICAgICAgICAgICBjYXNlIDU6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlMik7CiAgICB9KSkoKTsKICB9LAogIGdldEZsb29yTGlzdDogZnVuY3Rpb24gZ2V0Rmxvb3JMaXN0KF9yZWYzKSB7CiAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMygpIHsKICAgICAgdmFyIGNvbW1pdCwgcmVzdWx0OwogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTMkKF9jb250ZXh0MykgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0My5wcmV2ID0gX2NvbnRleHQzLm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIGNvbW1pdCA9IF9yZWYzLmNvbW1pdDsKICAgICAgICAgICAgICBfY29udGV4dDMubmV4dCA9IDM7CiAgICAgICAgICAgICAgcmV0dXJuIHJlcUZsb29yTGlzdCgpOwoKICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICAgIHJlc3VsdCA9IF9jb250ZXh0My5zZW50OwoKICAgICAgICAgICAgICBpZiAocmVzdWx0LmNvZGUgPT0gMjAwKSB7CiAgICAgICAgICAgICAgICBjb21taXQoIkdFVEZMT09STElTVCIsIHJlc3VsdC5kYXRhKTsKICAgICAgICAgICAgICB9CgogICAgICAgICAgICBjYXNlIDU6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0My5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlMyk7CiAgICB9KSkoKTsKICB9Cn07IC8v55So5LqO566A5YyW5LuT5bqT5pWw5o2uIOeQhuino+S4uuiuoeeul+WxnuaApwoKdmFyIGdldHRlcnMgPSB7fTsKZXhwb3J0IGRlZmF1bHQgewogIHN0YXRlOiBzdGF0ZSwKICBtdXRhdGlvbnM6IG11dGF0aW9ucywKICBhY3Rpb25zOiBhY3Rpb25zLAogIGdldHRlcnM6IGdldHRlcnMKfTs="},{"version":3,"sources":["C:/Users/a/Desktop/project-SHP/app/src/store/home/index.js"],"names":["reqCategoryList","reqBannerList","reqFloorList","state","categoryList","bannerList","floorList","mutations","CATEGORYLIST","GETBANNERLIST","GETFLOORLIST","actions","commit","result","code","data","getBannerList","getFloorList","getters"],"mappings":";;AAAA;AACA,SAAQA,eAAR,EAAwBC,aAAxB,EAAsCC,YAAtC,QAAyD,gBAAzD;AAGA,IAAMC,KAAK,GAAG;AACbC,EAAAA,YAAY,EAAC,EADA;AAEbC,EAAAA,UAAU,EAAC,EAFE;AAGbC,EAAAA,SAAS,EAAC;AAHG,CAAd,C,CAMA;;AACA,IAAMC,SAAS,GAAG;AACjBC,EAAAA,YADiB,wBACJL,KADI,EACEC,YADF,EACe;AAC/BD,IAAAA,KAAK,CAACC,YAAN,GAAqBA,YAArB;AACA,GAHgB;AAIjBK,EAAAA,aAJiB,yBAIHN,KAJG,EAIGE,UAJH,EAIc;AAC9BF,IAAAA,KAAK,CAACE,UAAN,GAAmBA,UAAnB;AACA,GANgB;AAOjBK,EAAAA,YAPiB,wBAOJP,KAPI,EAOEG,SAPF,EAOY;AAC5BH,IAAAA,KAAK,CAACG,SAAN,GAAkBA,SAAlB;AACA;AATgB,CAAlB,C,CAYA;;AACA,IAAMK,OAAO,GAAG;AACd;AACF;AACA;AACQP,EAAAA,YAJQ,8BAIc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAARQ,cAAAA,MAAQ,QAARA,MAAQ;AAAA;AAAA,qBACRZ,eAAe,EADP;;AAAA;AACvBa,cAAAA,MADuB;;AAE3B,kBAAGA,MAAM,CAACC,IAAP,IAAe,GAAlB,EAAsB;AACrBF,gBAAAA,MAAM,CAAC,cAAD,EAAgBC,MAAM,CAACE,IAAvB,CAAN;AACA;;AAJ0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAK3B,GATa;AAURC,EAAAA,aAVQ,gCAUe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAARJ,cAAAA,MAAQ,SAARA,MAAQ;AAAA;AAAA,qBACTX,aAAa,EADJ;;AAAA;AACxBY,cAAAA,MADwB;;AAE5B,kBAAGA,MAAM,CAACC,IAAP,IAAe,GAAlB,EAAsB;AACrBF,gBAAAA,MAAM,CAAC,eAAD,EAAiBC,MAAM,CAACE,IAAxB,CAAN;AACA;;AAJ2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAK5B,GAfa;AAiBRE,EAAAA,YAjBQ,+BAiBc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAARL,cAAAA,MAAQ,SAARA,MAAQ;AAAA;AAAA,qBACRV,YAAY,EADJ;;AAAA;AACvBW,cAAAA,MADuB;;AAE3B,kBAAGA,MAAM,CAACC,IAAP,IAAe,GAAlB,EAAsB;AACrBF,gBAAAA,MAAM,CAAC,cAAD,EAAgBC,MAAM,CAACE,IAAvB,CAAN;AACA;;AAJ0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAK3B;AAtBa,CAAhB,C,CAyBA;;AACA,IAAMG,OAAO,GAAG,EAAhB;AAIA,eAAgB;AACff,EAAAA,KAAK,EAALA,KADe;AAEfI,EAAAA,SAAS,EAATA,SAFe;AAGfI,EAAAA,OAAO,EAAPA,OAHe;AAIfO,EAAAA,OAAO,EAAPA;AAJe,CAAhB","sourcesContent":["//从api/index.js 引入这两个方法\r\nimport {reqCategoryList,reqBannerList,reqFloorList} from \"@/api/index.js\"\r\n\r\n\r\nconst state = {\r\n\tcategoryList:[],\r\n\tbannerList:[],\r\n\tfloorList:[]\r\n};\r\n\r\n// mutations是修改数据的唯一手段\r\nconst mutations = {\r\n\tCATEGORYLIST(state,categoryList){\r\n\t\tstate.categoryList = categoryList\r\n\t},\r\n\tGETBANNERLIST(state,bannerList){\r\n\t\tstate.bannerList = bannerList\r\n\t},\r\n\tGETFLOORLIST(state,floorList){\r\n\t\tstate.floorList = floorList\r\n\t}\r\n};\r\n\r\n// actions书写业务逻辑\r\nconst actions = {\r\n\t\t/* 2. 从app.vue 调用执行这个函数 参数解构出commit  \r\n\t\t\t  调用从api/index.js 引入的reqCategoryList函数 去发请求 \r\n\t\t      然后通过commit调用mutations里面的CATEGORYLIST 去把请求来的数据存到stste里面*/\r\n\t\tasync categoryList({commit}){\r\n\t\t\tlet result = await reqCategoryList();\r\n\t\t\tif(result.code == 200){\r\n\t\t\t\tcommit(\"CATEGORYLIST\",result.data)\r\n\t\t\t}\r\n\t\t},\r\n\t\tasync getBannerList({commit}){\r\n\t\t\tlet result = await reqBannerList();\r\n\t\t\tif(result.code == 200){\r\n\t\t\t\tcommit(\"GETBANNERLIST\",result.data)\r\n\t\t\t}\r\n\t\t},\r\n\t\t\r\n\t\tasync getFloorList({commit}){\r\n\t\t\tlet result = await reqFloorList();\r\n\t\t\tif(result.code == 200){\r\n\t\t\t\tcommit(\"GETFLOORLIST\",result.data)\r\n\t\t\t}\r\n\t\t}\r\n};\r\n\r\n//用于简化仓库数据 理解为计算属性\r\nconst getters = {\r\n\r\n}\r\n\r\nexport default ({\r\n\tstate,\r\n\tmutations,\r\n\tactions,\r\n\tgetters\r\n\t\r\n})"]}]}